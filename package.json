{
	"name": "ferocity",
	"displayName": "Ferocity",
	"description": "Experimental dependency manager and build tool for Scala.",
	"version": "0.0.1",
	"publisher": "Propensive",
	"icon": "media/logo.png",
	"engines": {
		"vscode": "^1.51.0"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/propensive/ferocity"
	},
	"categories": [
		"Programming Languages"
	],
	"activationEvents": [
		"workspaceContains:**/.fury"
	],
	"main": "./out/extension.js",
	"contributes": {
		"viewsContainers": {
			"activitybar": [
				{
					"id": "ferocity-explorer",
					"title": "Ferocity",
					"icon": "media/logo.svg"
				}
			]
		},
		"views": {
			"ferocity-explorer": [
				{
					"id": "ferocity.layer",
					"name": "Layer"
				},
				{
					"id": "ferocity.hierarchy",
					"name": "Hierarchy"
				},
				{
					"id": "ferocity.universe",
					"name": "Universe"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "ferocity.layer",
				"contents": "Layer not initialized.\n[Initialize](command:ferocity.initializeLayer)",
				"when": "!ferocity.initialized"
			}
		],
		"commands": [
			{
				"command": "ferocity.initializeLayer",
				"category": "Ferocity",
				"title": "Initialize Layer"
			},
			{
				"command": "ferocity.refreshLayer",
				"category": "Ferocity",
				"title": "Refresh Layer",
				"icon": {
					"dark": "media/icons/dark/refresh.svg",
					"light": "media/icons/light/refresh.svg"
				}
			},
			{
				"command": "ferocity.addProject",
				"title": "Add Project"
			},
			{
				"command": "ferocity.removeProject",
				"title": "Remove"
			},
			{
				"command": "ferocity.showDependencyGraph",
				"category": "Ferocity",
				"title": "Show Dependency Graph"
			},
			{
				"command": "ferocity.addModule",
				"title": "Add Module"
			},
			{
				"command": "ferocity.buildModule",
				"category": "Ferocity",
				"title": "Build"
			},
			{
				"command": "ferocity.removeModule",
				"title": "Remove"
			},
			{
				"command": "ferocity.addBinary",
				"title": "Binary"
			},
			{
				"command": "ferocity.addSource",
				"title": "Source"
			},
			{
				"command": "ferocity.updateModuleCompiler",
				"title": "Compiler"
			},
			{
				"command": "ferocity.updateModuleName",
				"title": "Name"
			},
			{
				"command": "ferocity.updateModuleType",
				"title": "Type"
			},
			{
				"command": "ferocity.removeSource",
				"title": "Remove"
			},
			{
				"command": "ferocity.removeBinary",
				"title": "Remove"
			},
			{
				"command": "ferocity.revealSource",
				"title": "Reveal in Explorer"
			},
			{
				"command": "ferocity.refreshHierarchy",
				"category": "Ferocity",
				"title": "Refresh Hierarchy",
				"icon": {
					"dark": "media/icons/dark/refresh.svg",
					"light": "media/icons/light/refresh.svg"
				}
			},
			{
				"command": "ferocity.refreshUniverse",
				"category": "Ferocity",
				"title": "Refresh Universe",
				"icon": {
					"dark": "media/icons/dark/refresh.svg",
					"light": "media/icons/light/refresh.svg"
				}
			},
			{
				"command": "ferocity.openFile",
				"category": "Ferocity",
				"title": "Open File"
			},
			{
				"command": "ferocity.revealProject",
				"category": "Ferocity",
				"title": "Reveal"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "ferocity.initializeLayer",
					"when": "!ferociy.initialized"
				},
				{
					"command": "ferocity.addProject",
					"when": "false"
				},
				{
					"command": "ferocity.removeProject",
					"when": "false"
				},
				{
					"command": "ferocity.showDependencyGraph",
					"when": "false"
				},
				{
					"command": "ferocity.addModule",
					"when": "false"
				},
				{
					"command": "ferocity.buildModule",
					"when": "false"
				},
				{
					"command": "ferocity.removeModule",
					"when": "false"
				},
				{
					"command": "ferocity.addSource",
					"when": "false"
				},
				{
					"command": "ferocity.addBinary",
					"when": "false"
				},
				{
					"command": "ferocity.updateModuleCompiler",
					"when": "false"
				},
				{
					"command": "ferocity.updateModuleName",
					"when": "false"
				},
				{
					"command": "ferocity.updateModuleType",
					"when": "false"
				},
				{
					"command": "ferocity.removeSource",
					"when": "false"
				},
				{
					"command": "ferocity.removeBinary",
					"when": "false"
				},
				{
					"command": "ferocity.revealSource",
					"when": "false"
				},
				{
					"command": "ferocity.openFile",
					"when": "false"
				},
				{
					"command": "ferocity.revealProject",
					"when": "false"
				}
			],
			"view/title": [
				{
					"command": "ferocity.refreshLayer",
					"when": "view == ferocity.layer",
					"group": "navigation@3"
				},
				{
					"command": "ferocity.refreshHierarchy",
					"when": "view == ferocity.hierarchy",
					"group": "navigation"
				},
				{
					"command": "ferocity.refreshUniverse",
					"when": "view == ferocity.universe",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "ferocity.addProject",
					"when": "view == ferocity.layer && viewItem == ferocity.layer.layer-item"
				},
				{
					"command": "ferocity.showDependencyGraph",
					"when": "view == ferocity.layer && viewItem == ferocity.layer.project-item",
					"group": "project@1"
				},
				{
					"command": "ferocity.addModule",
					"when": "view == ferocity.layer && viewItem == ferocity.layer.project-item",
					"group": "project@2"
				},
				{
					"command": "ferocity.removeProject",
					"when": "view == ferocity.layer && viewItem == ferocity.layer.project-item",
					"group": "project@2"
				},
				{
					"command": "ferocity.buildModule",
					"when": "view == ferocity.layer && viewItem == ferocity.layer.module-item",
					"group": "module@1@1"
				},
				{
					"submenu": "ferocity.layer.module-item.add",
					"when": "view == ferocity.layer && viewItem == ferocity.layer.module-item",
					"group": "module@2@1"
				},
				{
					"submenu": "ferocity.layer.module-item.update",
					"when": "view == ferocity.layer && viewItem == ferocity.layer.module-item",
					"group": "module@2@2"
				},
				{
					"command": "ferocity.removeModule",
					"when": "view == ferocity.layer && viewItem == ferocity.layer.module-item",
					"group": "module@3@1"
				},
				{
					"command": "ferocity.removeSource",
					"when": "view == ferocity.layer && viewItem == ferocity.layer.source-item"
				},
				{
					"command": "ferocity.removeBinary",
					"when": "view == ferocity.layer && viewItem == ferocity.layer.binary-item"
				},
				{
					"command": "ferocity.revealSource",
					"when": "view == ferocity.layer && viewItem == ferocity.layer.source-item || viewItem == ferocity.layer.source-directory-item || viewItem == ferocity.layer.source-file-item"
				}
			],
			"ferocity.layer.module-item.add": [
				{
					"command": "ferocity.addSource"
				},
				{
					"command": "ferocity.addBinary"
				}
			],
			"ferocity.layer.module-item.update": [
				{
					"command": "ferocity.updateModuleCompiler"
				},
				{
					"command": "ferocity.updateModuleName"
				},
				{
					"command": "ferocity.updateModuleType"
				}
			]
		},
		"submenus": [
			{
				"id": "ferocity.layer.module-item.add",
				"label": "Add"
			},
			{
				"id": "ferocity.layer.module-item.update",
				"label": "Update"
			}
		],
		"markdown.markdownItPlugins": true
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"test": "node ./out/test/runTest.js"
	},
	"dependencies": {
		"axios": "0.19.0",
		"decompress": "^4.2.1",
		"markdown-it-container": "^3.0.0",
		"mkdirp": "^1.0.3",
		"node-fetch": "^2.6.0",
		"promisify-child-process": "^3.1.3"
	},
	"devDependencies": {
		"@typescript-eslint/parser": "^4.1.1",
		"@typescript-eslint/eslint-plugin": "^4.1.1",
		"@types/decompress": "^4.2.3",
		"@types/glob": "^7.1.3",
		"@types/mkdirp": "^1.0.0",
		"@types/mocha": "^8.0.0",
		"@types/node": "^14.0.27",
		"@types/node-fetch": "^2.5.4",
		"@types/vscode": "^1.43.0",
		"eslint": "^7.9.0",
		"glob": "^7.1.6",
		"mermaid": "^8.8.4",
		"mocha": "^8.1.3",
		"typescript": "^4.0.2",
		"vscode-test": "^1.4.0"
	},
	"extensionDependencies": []
}